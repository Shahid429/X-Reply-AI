name: Build and Release X Reply AI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}
  release:
    types: [created]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Build extension
        run: npm run prod

      - name: Verify build
        run: |
          ls -la dist/
          if [ ! -f "dist/manifest.json" ]; then
            echo "Build failed: manifest.json not found"
            exit 1
          fi
          if [ ! -f "dist/background.js" ]; then
            echo "Build failed: background.js not found"
            exit 1
          fi

      - name: Create release archive
        run: |
          mkdir -p release
          cd dist
          zip -r ../release/X-Reply-AI-v${{ github.event.release.tag_name || github.sha }}.zip .
          cd ..
          ls -la release/

      # Always upload build artifacts for CI visibility
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: x-reply-ai-build-${{ github.sha }}
          path: dist/
          retention-days: 30

      # Always upload ZIP archive for convenience
      - name: Upload release archive
        uses: actions/upload-artifact@v4
        with:
          name: x-reply-ai-archive-${{ github.event.release.tag_name || github.sha }}
          path: release/
          retention-days: 90

      # Only attach ZIP to GitHub release when triggered by a release event
      - name: Upload release assets to GitHub Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: release/X-Reply-AI-v${{ github.event.release.tag_name }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
